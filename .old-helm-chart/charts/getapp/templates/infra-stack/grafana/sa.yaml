{{- if (include "infra.enabled" .) }}
# Service Account for Grafana
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: {{ .Release.Namespace }}
---
# Role for Grafana (namespace-scoped)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: grafana-role
  namespace: {{ .Release.Namespace }}
rules:
  # Access to pod metrics
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints"]
    verbs: ["get", "list", "watch"]
  
  # Access to configmaps and secrets
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list", "watch"]
  
  # Access to custom metrics within namespace
  - apiGroups: ["custom.metrics.k8s.io"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
  
  # Access to prometheus metrics
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]

  # Access to events
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch"]
---
# RoleBinding to bind the service account to the role
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grafana-rolebinding
  namespace: {{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    name: grafana
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: grafana-role
  apiGroup: rbac.authorization.k8s.io
---
# SecurityContextConstraints for Grafana
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: {{ .Release.Namespace }}-grafana-scc
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegedContainer: false
allowedCapabilities: []
defaultAddCapabilities: []
fsGroup:
  type: RunAsAny
priority: 10
readOnlyRootFilesystem: false
requiredDropCapabilities:
  - ALL
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
users:
  - system:serviceaccount:{{ .Release.Namespace }}:grafana
volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - persistentVolumeClaim
  - projected
  - secret
---

# ClusterRole for SCC
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-scc-role
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups:
      - security.openshift.io
    resourceNames:
      - {{ .Release.Name }}-scc
    resources:
      - securitycontextconstraints
    verbs:
      - use
---
# ClusterRoleBinding for SCC
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-scc-rolebinding
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-grafana
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-scc-role
  apiGroup: rbac.authorization.k8s.io
{{- end }}