{{- if (include "infra.enabled" .) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    getapp: mariadb
  name: mariadb
spec:
  replicas: 1
  selector:
    matchLabels:
      getapp: mariadb
  serviceName: mariadb
  template:
    metadata:
      labels:
        getapp: mariadb
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  getapp: mariadb
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: false
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MARIADB_ROOT_PASSWORD
          value: admin
        - name: MARIADB_USER
          value: bn_matomo
        - name: MARIADB_PASSWORD
          value: Herr$Owejpynd5
        - name: MARIADB_DATABASE
          value: bitnami_matomo
        image: registry-1.docker.io/bitnami/mariadb:11.2.2-debian-11-r6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              mysqladmin status -uroot -p"${password_aux}"
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: mariadb
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              mysqladmin status -uroot -p"${password_aux}"
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /bitnami/mariadb
          name: data
        - mountPath: /opt/bitnami/mariadb/conf/my.cnf
          name: config
          subPath: my.cnf
      schedulerName: default-scheduler
      securityContext:
        fsGroupChangePolicy: Always
      serviceAccount: {{ .Release.Namespace }}-getapp-run-as-root
      serviceAccountName: {{ .Release.Namespace }}-getapp-run-as-root
      volumes:
      - configMap:
          defaultMode: 420
          name: mariadb
        name: config
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        getapp: mariadb
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
      volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  labels:
    getapp: mariadb
  name: mariadb
spec:
  ports:
  - name: mysql
    port: 3306
    protocol: TCP
    targetPort: mysql
  selector:
    getapp: mariadb
{{- end }}